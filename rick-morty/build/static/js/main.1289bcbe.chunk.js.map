{"version":3,"sources":["components/rmcard/RMCard.js","components/loader/Loader.js","components/filter/Filter.js","components/home/Home.js","components/header/Header.js","components/rmcard/RMCardDetail.js","components/about/About.js","App.js","serviceWorker.js","index.js"],"names":["RMCard","className","src","this","props","img","alt","name","class","Component","Loader","d","fill","fillOpacity","attributeName","type","from","to","dur","repeatCount","React","Filter","state","status","gender","handleFiltering","bind","handleSubmit","event","preventDefault","target","value","setState","onSubmit","id","placeholder","onChange","Home","characters","isLoading","selectedStatus","selectedGender","enteredName","error","errorMSG","fetch","then","res","json","results","console","log","map","ch","key","image","Header","pathN","useLocation","pathname","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","exact","isNaN","parseInt","substring","length","RMCardDetail","item","match","params","origin","i","style","margin","minHeight","species","location","About","App","text","atEnter","opacity","atLeave","atActive","path","component","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","addEventListener","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yTAkBiBA,G,uLAXP,OACE,yBAAKC,UAAU,2BACb,yBAAKA,UAAU,eAAeC,IAAKC,KAAKC,MAAMC,IAAKC,IAAKH,KAAKC,MAAMG,OACnE,yBAAKC,MAAM,aACT,wBAAIP,UAAU,cAAcE,KAAKC,MAAMG,Y,GANhCE,c,QCSRC,E,iLAVP,OACA,yBAAKT,UAAU,UACX,yBAAKA,UAAU,WACf,2BAAG,0BAAMU,EAAE,sPAAsPC,KAAK,UAAUC,YAAY,MAAK,sCAAkBC,cAAc,YAAYC,KAAK,SAASC,KAAK,UAAUC,GAAG,YAAYC,IAAI,SAASC,YAAY,sB,GALzYC,IAAMX,W,QCsEZY,E,YArEX,WAAYjB,GAAQ,IAAD,8BACf,4CAAMA,KACDkB,MAAQ,CACXf,KAAM,EAAKH,MAAMG,KACjBgB,OAAQ,EAAKnB,MAAMmB,OACnBC,OAAQ,EAAKpB,MAAMoB,QAErB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARL,E,6EAWDE,GACdA,EAAMC,iBACN,IAAMC,EAASF,EAAME,OACfC,EAAQD,EAAOC,MACfxB,EAAOuB,EAAOvB,KAEpBJ,KAAK6B,SAAL,eACGzB,EAAOwB,M,mCAKCH,GACXA,EAAMC,iBACN1B,KAAKC,MAAMuB,aAAaxB,KAAKmB,MAAMC,OAAQpB,KAAKmB,MAAME,OAAQrB,KAAKmB,MAAMf,Q,+BAIzE,OACE,0BAAMN,UAAU,yCAAyCgC,SAAU9B,KAAKwB,aAAaD,KAAKvB,OACtF,2BACEY,KAAK,OACLmB,GAAG,SACHjC,UAAU,eACVkC,YAAY,SACZ5B,KAAK,OACLwB,MAAO5B,KAAKmB,MAAMf,KAClB6B,SAAUjC,KAAKsB,kBAEjB,4BACExB,UAAU,gBACViC,GAAG,SACH3B,KAAK,SACLwB,MAAO5B,KAAKmB,MAAMC,OAClBa,SAAUjC,KAAKsB,iBACf,4BAAQM,MAAM,IAAd,UACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,WAAd,YAEF,4BACE9B,UAAU,gBACViC,GAAG,SACH3B,KAAK,SACLwB,MAAO5B,KAAKmB,MAAME,OAClBY,SAAUjC,KAAKsB,iBACf,4BAAQM,MAAM,IAAd,UACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,WAAd,YAEF,2BAAO9B,UAAU,kBAAkBc,KAAK,SAASgB,MAAM,Y,GAhEhDX,IAAMX,WC0FV4B,E,YAnFb,WAAYjC,GAAO,IAAD,8BAChB,4CAAMA,KACDuB,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKJ,MAAQ,CACXgB,WAAY,GACZC,WAAW,EACXC,eAAgB,GAChBC,eAAgB,GAChBC,YAAa,GACbC,OAAO,EACPC,SAAU,IAVI,E,iFAcE,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJ,EAAKhB,SAAS,CACZO,WAAW,EACXD,WAAYU,EAAKC,e,mCAMV1B,EAAOC,EAAOjB,GAAM,IAAD,OAC9BJ,KAAK6B,SAAS,CACZO,WAAW,EACXC,eAAgBjB,EAChBkB,eAAgBjB,EAChBkB,YAAanC,IAEfsC,MAAM,qDAAD,OAAsDtB,EAAtD,mBAAuEC,EAAvE,iBAAsFjB,IACxFuC,MAAK,SAAAC,GACgB,MAAfA,EAAIxB,QACP2B,QAAQC,IAAIJ,EAAIJ,OAChB,EAAKX,SAAS,CACZW,OAAO,KAGTI,EAAIC,OAAOF,MAAK,SAAAE,GAAS,EAAKhB,SAAS,CAACO,WAAW,EAAOD,WAAYU,EAAKC,kB,+BAM1E,IAAD,EACyC9C,KAAKmB,MAA/CiB,EADC,EACDA,UAAWD,EADV,EACUA,WAAYK,EADtB,EACsBA,MADtB,EAC6BC,SACnC,OAAGD,EAED,yBAAKT,GAAG,eACN,yFAIDK,EACM,6BACL,kBAAC,EAAD,OAKF,6BAAStC,UAAU,mBACjB,kBAAC,EAAD,CACEM,KAAMJ,KAAKmB,MAAMoB,YACjBlB,OAAQrB,KAAKmB,MAAMmB,eACnBlB,OAAQpB,KAAKmB,MAAMkB,eACnBb,aAAcxB,KAAKwB,eACrB,yBAAK1B,UAAU,8BACVqC,EAAWc,KAAI,SAACC,GAAD,OACd,kBAAC,IAAD,CAAMpC,GAAE,WAAMoC,EAAGnB,KACf,kBAAC,EAAD,CAAQoB,IAAKD,EAAGnB,GAAIjC,UAAU,MAAOiC,GAAKmB,EAAGnB,GAAI3B,KAAM8C,EAAG9C,KAAMF,IAAMgD,EAAGE,kB,GAzE1EnC,IAAMX,W,OCoCV+C,EAvCA,SAACpD,GACd,IAAIqD,EAAQC,cAAcC,SAC1B,OACE,yBAAKzB,GAAG,YAAY1B,MAAM,0DACxB,kBAAC,IAAD,CACAA,MAAM,eACNS,GAAG,KAFH,oBAKA,4BAAQhB,UAAU,iBAAiBc,KAAK,SAAS6C,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACpL,0BAAM/D,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BiC,GAAG,0BAC3C,wBAAI1B,MAAM,sBACR,kBAAC,IAAD,CACAP,UAAU,kBACVgE,gBAAgB,WAChBC,OAAK,EAACjD,GAAG,KACP,wBAAIhB,UAAU,YAAd,SAEF,kBAAC,IAAD,CACAA,UAAU,kBACVgE,gBAAgB,WAChBC,OAAK,EAACjD,GAAE,UAAKyC,cAAcC,WACxBQ,MAAMC,SAASX,EAAMY,UAAU,EAAEZ,EAAMa,UAAY,KAAO,wBAAIrE,UAAU,YAAd,WAE7D,kBAAC,IAAD,CACAA,UAAU,kBACVgE,gBAAgB,WAChBC,OAAK,EAACjD,GAAG,UACR,wBAAIhB,UAAU,YAAd,gB,yBCkCIsE,E,YA9DX,WAAYnE,GAAO,IAAD,8BACd,4CAAMA,KACDkB,MAAQ,CACTiB,WAAW,EACXiC,KAAM,GACNtC,GAAI,EAAK9B,MAAMqE,MAAMC,OAAOxC,IALlB,E,sMAUdW,MAAM,6CAAD,OAA8C1C,KAAKmB,MAAMY,KAC3DY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJ,EAAKhB,SAAS,CACZO,WAAW,EACXiC,KAAMxB,EACN2B,OAAQ3B,EAAK2B,Y,qIASnB,IAAMC,EAAIzE,KAAKmB,MAAMkD,KAErB,OADUrE,KAAKmB,MAAMiB,UAEV,kBAAC,EAAD,MAIH,6BACAsC,MAAO,CAACC,OAAQ,QAChB7E,UAAY,gEAER,kBAAC,EAAD,CAAQA,UAAU,iBAAiBiC,GAAK0C,EAAE1C,GAAI3B,KAAMqE,EAAErE,KAAMF,IAAMuE,EAAErB,QAEpE,yBAAKsB,MAAO,CAACE,UAAW,SAAUvE,MAAM,QACpC,wBAAIA,MAAM,+BACN,wBAAIA,MAAM,mBAAV,OAAiCoE,EAAE1C,IACnC,wBAAI1B,MAAM,mBAAV,WAAqCoE,EAAErD,QACvC,wBAAIf,MAAM,mBAAV,YAAsCoE,EAAEI,SACxC,wBAAIxE,MAAM,mBAAV,SAAmCoE,EAAE7D,MACrC,wBAAIP,MAAM,mBAAV,WAAqCoE,EAAEpD,QACvC,wBAAIhB,MAAM,mBAAV,WAAqCoE,EAAED,OAAOpE,MAC9C,wBAAIC,MAAM,mBAAV,aAAuCoE,EAAEK,SAAS1E,a,GA/CnDa,IAAMX,WCuBhByE,MA3BjB,SAAe9E,GACX,OACI,6BACAH,UAAU,iDAEN,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,YACX,yBACAC,IAAI,qKACJD,UAAU,iCACVK,IAAI,sBAER,yBAAKL,UAAU,sCACf,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,mBACA,uBAAGA,UAAU,aAAb,4EACA,uBAAGA,UAAU,aAAY,2BAAOA,UAAU,cAAjB,qC,QCiBlCkF,E,iLApBP,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQC,KAAK,uBACX,kBAAC,IAAD,CACEC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,SAAU,CAAEF,QAAS,GACrBrF,UAAU,iBAER,kBAAC,IAAD,CAAOwF,KAAK,IAAIvB,OAAK,EAACwB,UAAWrD,IACjC,kBAAC,IAAD,CAAOoD,KAAK,SAASvB,OAAK,EAACwB,UAAWR,IACtC,kBAAC,IAAD,CAAOO,KAAK,OAAOvB,OAAK,EAACwB,UAAWnB,U,GAdpCnD,IAAMX,WCDlBkF,G,MAAcC,QACW,cAA7BC,OAAOZ,SAASa,UAEe,UAA7BD,OAAOZ,SAASa,UAEhBD,OAAOZ,SAASa,SAASrB,MACvB,4DAsCN,SAASsB,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTlD,MAAK,SAAAuD,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjF,QACf4E,UAAUC,cAAcO,YAI1BxD,QAAQC,IACN,iHAKE8C,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBnD,QAAQC,IAAI,sCAGR8C,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAAlE,GACLO,QAAQP,MAAM,4CAA6CA,MCzFjEmE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDe1C,SAAkBhB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,GAAwBtB,OAAOZ,SAASmC,MACpDzC,SAAWkB,OAAOZ,SAASN,OAIvC,OAGFkB,OAAOwB,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMmB,GAAN,sBAEPxB,IAgEV,SAAiCK,EAAOC,GAEtCpD,MAAMmD,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BxE,MAAK,SAAAyE,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAAShG,QACO,MAAfiG,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CxB,UAAUC,cAAcwB,MAAM7E,MAAK,SAAAuD,GACjCA,EAAauB,aAAa9E,MAAK,WAC7B+C,OAAOZ,SAAS4C,eAKpB9B,EAAgBC,EAAOC,MAG1BY,OAAM,WACL3D,QAAQC,IACN,oEAvFA2E,CAAwB9B,EAAOC,GAI/BC,UAAUC,cAAcwB,MAAM7E,MAAK,WACjCI,QAAQC,IACN,iHAMJ4C,EAAgBC,EAAOC,OCtC/BE,K","file":"static/js/main.1289bcbe.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './RMCard.css';\r\n\r\n\r\n\r\n  class RMCard extends Component {\r\n      render(){\r\n          return(\r\n            <div className=\"card My-Card text-white\">\r\n              <img className=\"card-img-top\" src={this.props.img} alt={this.props.name}/>\r\n              <div class=\"card-body\">\r\n                <h5 className=\"card-title\">{this.props.name}</h5>\r\n              </div>              \r\n            </div>\r\n          ) \r\n      };\r\n  }\r\n\r\n  export default RMCard;\r\n\r\n\r\n","import React from 'react';\r\n\r\nclass Loader extends React.Component{\r\n    render(){\r\n        return (\r\n        <div className=\"Loader\">\r\n            <svg className=\"Loading\">\r\n            <g><path d=\"M31.6 8.98a4.02 4.02 0 0 0 1.7 5.3l6.12 3.22a52.56 52.56 0 1 0 63.13 10.73L96 33.97a43.88 43.88 0 1 1-53-8.5l-3.65 7.4a4.02 4.02 0 0 0 1.72 5.3 3.73 3.73 0 0 0 5.13-1.67l7.66-15.63a4.18 4.18 0 0 0-1.75-5.4L36.74 7.32a3.73 3.73 0 0 0-5.13 1.66z\" fill=\"#000000\" fillOpacity=\"1\"/><animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 64 64\" to=\"360 64 64\" dur=\"1800ms\" repeatCount=\"indefinite\"></animateTransform></g>\r\n            </svg>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nclass Filter extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          name: this.props.name,\r\n          status: this.props.status,\r\n          gender: this.props.gender,  \r\n        };\r\n        this.handleFiltering = this.handleFiltering.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n      \r\n      handleFiltering(event){\r\n        event.preventDefault();\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n\r\n    \r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.handleSubmit(this.state.status, this.state.gender, this.state.name)\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <form className=\"form-group row justify-content-center \" onSubmit={this.handleSubmit.bind(this)}>\r\n              <input \r\n                type=\"text\"\r\n                id=\"search\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search\"\r\n                name=\"name\"\r\n                value={this.state.name}                \r\n                onChange={this.handleFiltering}\r\n                />\r\n              <select \r\n                className=\"custom-select\"\r\n                id=\"status\"\r\n                name=\"status\"\r\n                value={this.state.status} \r\n                onChange={this.handleFiltering}>\r\n                <option value=\"\">status</option>\r\n                <option value=\"alive\">alive</option>\r\n                <option value=\"dead\">dead</option>\r\n                <option value=\"unknown\">unknown</option>\r\n              </select>\r\n              <select \r\n                className=\"custom-select\"\r\n                id=\"gender\"\r\n                name=\"gender\"\r\n                value={this.state.gender} \r\n                onChange={this.handleFiltering}>\r\n                <option value=\"\">gender</option>\r\n                <option value=\"male\">male</option>\r\n                <option value=\"female\">female</option>\r\n                <option value=\"genderless\">genderless</option>\r\n                <option value=\"unknown\">unknown</option>\r\n              </select>\r\n              <input className=\"btn btn-primary\" type=\"submit\" value=\"Go\"/>\r\n          </form>\r\n        );\r\n      }      \r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport RMCard from '../rmcard/RMCard';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport Loader from '../loader/Loader';\r\nimport Filter from '../filter/Filter';\r\n\r\n\r\n\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.state = {\r\n        characters: [],\r\n        isLoading: true,\r\n        selectedStatus: '',\r\n        selectedGender: '',\r\n        enteredName: '',\r\n        error: false,\r\n        errorMSG: '',\r\n        }    \r\n      }  \r\n    \r\n    componentDidMount(){\r\n      fetch('https://rickandmortyapi.com/api/character/')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          this.setState({\r\n            isLoading: false,\r\n            characters: json.results,\r\n            }\r\n          )\r\n        })\r\n      }\r\n\r\n      handleSubmit(status,gender,name){\r\n        this.setState({\r\n          isLoading: true,\r\n          selectedStatus: status,\r\n          selectedGender: gender,\r\n          enteredName: name\r\n        })\r\n        fetch(`https://rickandmortyapi.com/api/character/?status=${status}&gender=${gender}&name=${name}`)\r\n          .then(res => \r\n            {if (res.status !== 200){\r\n              console.log(res.error);\r\n              this.setState({\r\n                error: true,\r\n              })\r\n            }else {\r\n              res.json().then(json => {this.setState({isLoading: false, characters: json.results})})          \r\n        }\r\n      })\r\n    }   \r\n\r\n  \r\n      render(){        \r\n        var {isLoading, characters, error, errorMSG} = this.state;\r\n        if(error){\r\n          return (\r\n          <div id=\"nothingHere\">\r\n            <p>No results have been found, please, refresh and try again</p>\r\n          </div>\r\n          )\r\n        }\r\n        if(isLoading){\r\n          return <div>\r\n            <Loader/>\r\n            </div>\r\n        }\r\n        else{      \r\n          return(\r\n          <section className=\"container-fluid\">\r\n            <Filter \r\n              name={this.state.enteredName}\r\n              gender={this.state.selectedGender}\r\n              status={this.state.selectedStatus}\r\n              handleSubmit={this.handleSubmit}/>\r\n            <div className=\"row justify-content-around\">\r\n                {characters.map((ch) => (\r\n                  <Link to={`/${ch.id}`}>\r\n                    <RMCard key={ch.id} className=\"Big\"  id= {ch.id} name={ch.name} img= {ch.image} />\r\n                  </Link>\r\n                ))}\r\n            </div>\r\n          </section>\r\n          )\r\n        }\r\n    }\r\n  }\r\n  \r\n\r\n  export default Home;","import React from \"react\";\r\nimport {Link, NavLink, useLocation} from 'react-router-dom';\r\nimport Filter from \"../filter/Filter\";\r\n\r\n\r\nconst Header = (props) => {\r\n  let pathN = useLocation().pathname;\r\n  return (\r\n    <nav id=\"NavHeader\" class=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link\r\n      class=\"navbar-brand\" \r\n      to=\"/\">\r\n      The Rick & Morty\r\n      </Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">          \r\n          <NavLink \r\n          className=\"nav-item active\"\r\n          activeClassName=\"selected\"\r\n          exact to=\"/\">\r\n            <li className=\"nav-link\">HOME</li>\r\n          </NavLink>\r\n          <NavLink \r\n          className=\"nav-item active\"\r\n          activeClassName=\"selected\"\r\n          exact to={`${useLocation().pathname}`}>\r\n            {isNaN(parseInt(pathN.substring(1,pathN.length))) ? null : <li className=\"nav-link\">DETAIL</li>}\r\n          </NavLink>\r\n          <NavLink \r\n          className=\"nav-item active\"\r\n          activeClassName=\"selected\"\r\n          exact to=\"/About\">\r\n           <li className=\"nav-link\"> ABOUT </li>  \r\n          </NavLink>        \r\n          \r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport RMCard from './RMCard'\r\nimport './RMCard.css';\r\nimport Loader from '../loader/Loader';\r\n\r\n\r\nclass RMCardDetail extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isLoading: true,\r\n            item: {},\r\n            id: this.props.match.params.id,\r\n        }\r\n      }\r\n      \r\n      async componentDidMount(){\r\n        fetch(`https://rickandmortyapi.com/api/character/${this.state.id}`)\r\n          .then(res => res.json())\r\n          .then(json => {\r\n            this.setState({\r\n              isLoading: false,\r\n              item: json,\r\n              origin: json.origin\r\n              }\r\n            )\r\n          })\r\n        \r\n        }\r\n        \r\n        \r\n      render(){   \r\n        const i = this.state.item;\r\n        const l = this.state.isLoading;\r\n        if (l){\r\n            return <Loader/>\r\n            } else {\r\n                return(\r\n                \r\n                <section \r\n                style={{margin: \"0rem\"}}\r\n                className = \"container-fluid row justify-content-center align-items-start\">\r\n\r\n                    <RMCard className=\"My-Card-Detail\" id= {i.id} name={i.name} img= {i.image}/>\r\n                    \r\n                    <div style={{minHeight: \"376px\"}} class=\"card\" >\r\n                        <ul class=\"list-group list-group-flush\">\r\n                            <li class=\"list-group-item\">id: {i.id}</li>\r\n                            <li class=\"list-group-item\">status: {i.status}</li>\r\n                            <li class=\"list-group-item\">species: {i.species}</li>\r\n                            <li class=\"list-group-item\">type: {i.type}</li>\r\n                            <li class=\"list-group-item\">gender: {i.gender}</li>\r\n                            <li class=\"list-group-item\">origin: {i.origin.name}</li>\r\n                            <li class=\"list-group-item\">location: {i.location.name}</li>\r\n                        </ul>\r\n                    </div>\r\n                  \r\n                </section>\r\n                )\r\n            }\r\n        \r\n      }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default RMCardDetail;","import React from 'react';\r\n\r\nfunction About(props) {\r\n    return (\r\n        <section \r\n        className=\"container-fluid d-flex justify-content-center\">\r\n\r\n            <div className=\"card col-md-9 d-flex \">\r\n                <div className=\"row \">\r\n                    <div className=\"col-md-3\">\r\n                        <img \r\n                        src=\"https://media-exp1.licdn.com/dms/image/C4E03AQE3zjE9_vYFmA/profile-displayphoto-shrink_200_200/0?e=1596672000&v=beta&t=i9YqJaRlA_1nc0w0df2fVOySbGpZXP3XbwvyiBsl1ys\" \r\n                        className=\"card-img rounded-circle m-auto\" \r\n                        alt=\"Marcos's picture\"/>\r\n                    </div>\r\n                    <div className=\"col-md-8 d-flex align-items-center\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Hi! I'm Marcos!</h5>\r\n                        <p className=\"card-text\">I'm a Business Analyst who is on the pursuit of becoming a web developer</p>\r\n                        <p className=\"card-text\"><small className=\"text-muted\">Thanks for visiting my app</small></p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </section>\r\n    );\r\n  }\r\n\r\n  export default About;","import React from 'react';\r\nimport './App.css';\r\nimport Home from './components/home/Home';\r\nimport Header from './components/header/Header';\r\nimport RMCardDetail from './components/rmcard/RMCardDetail';\r\nimport About from './components/about/About';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { spring, AnimatedSwitch } from 'react-router-transition';\r\n\r\nclass App extends React.Component{\r\n  \r\n    render(){      \r\n        return(\r\n          <Router>\r\n            <Header text=\"The Rick and Morty\" />\r\n              <AnimatedSwitch\r\n                atEnter={{ opacity: 0 }}\r\n                atLeave={{ opacity: 0 }}\r\n                atActive={{ opacity: 1 }}\r\n                className=\"route-wrapper\"\r\n              >                \r\n                  <Route path=\"/\" exact component={Home}/>\r\n                  <Route path=\"/About\" exact component={About}/>\r\n                  <Route path=\"/:id\" exact component={RMCardDetail}/>\r\n              </AnimatedSwitch>\r\n          </Router>\r\n        )\r\n      }\r\n  }\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}